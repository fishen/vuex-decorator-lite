// Generated by "bundle-dts@1.1.4" https://github.com/fishen/bundle-dts#readme."
declare module "vuex-decorator-lite/src/constants" {
    export const DESIGN_PARAM_TYPES = "design:paramtypes";
    export const DESIGN_TYPE = "design:type";
    export const DESIGN_RETURN_TYPE = "design:returntype";
}
declare module "vuex-decorator-lite/src/type" {
    export type Newable<T = any> = new (...args: any) => T;
}
declare module "vuex-decorator-lite/src/module" {
    import { Newable } from 'vuex-decorator-lite/src/type';
    export interface ModuleOptions {
        /**
         * Create a reusable module
         * @default false
         */
        reusable?: boolean;
        /**
         * Module type, if the emitDecoratorMetadata option is enabled, then it is optional
         */
        type?: Newable;
    }
    export function Module(options?: ModuleOptions): (target: any, name: string) => void;
    export namespace Module {
        var hasModule: (target: any) => any;
        var getModules: (target: any) => {
            name: string;
            type: any;
            options?: ModuleOptions;
        }[];
    }
}
declare module "vuex-decorator-lite/src/store" {
    import { Store as S, Module as M } from 'vuex';
    import { ModuleOptions } from 'vuex-decorator-lite/src/module';
    import { Newable } from 'vuex-decorator-lite/src/type';
    export class Store {
        static createStore(instance: {
            $store: S<any>;
            $root: any;
        } & Record<string, any>, name?: string[], namespaced?: boolean, reusable?: boolean): any;
        static registerModule(name: string, type: Newable, parent: any, store: M<any, any>, options?: ModuleOptions): void;
        static construct(cls: Newable): any;
    }
}
declare module "vuex-decorator-lite/src/model" {
    import { Module, Plugin } from 'vuex';
    import { Newable } from 'vuex-decorator-lite/src/type';
    import { ModuleOptions } from 'vuex-decorator-lite/src/module';
    export interface VuexModelOptions<P = any> {
        plugins?: Plugin<P>[];
        strict?: boolean;
        devtools?: boolean;
    }
    export class VuexModel<C extends Newable, S = any> {
        readonly instance: InstanceType<C>;
        readonly module: Module<S, any>;
        constructor(type: C, options?: ModuleOptions);
        install(vue: {
            prototype: any;
        }, options?: {
            name: string;
        }): void;
        createStore(options?: VuexModelOptions): any;
        regishterModule(module: Record<string, Newable>, options?: ModuleOptions): void;
    }
}
declare module "vuex-decorator-lite" {
    import "reflect-metadata";
    export { VuexModel, VuexModelOptions } from 'vuex-decorator-lite/src/model';
    export { Module, ModuleOptions } from 'vuex-decorator-lite/src/module';
    export { Newable } from 'vuex-decorator-lite/src/type';
}